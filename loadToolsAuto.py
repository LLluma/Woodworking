# This tool gets "Tools" array from file loadToolsSettings.py and
# generate loadTools.py file.
# This should be run only once if you added new macro.
# There is no need to run it ad each workbench startup.

import loadToolsSettings


output = []
output.append(
    """# This file has been automatically generated by the loadToolsAuto.py script. Don't change it here.

import os
import sys

import FreeCAD
import FreeCADGui

import fakemodule


translate = FreeCAD.Qt.translate
path = os.path.dirname(fakemodule.__file__)
iconPath = os.path.join(path, "Icons")


def QT_TRANSLATE_NOOP(context, text):
    return text
"""
)

# ######################################################################################################################
# Create Classes
# ######################################################################################################################

for group_name, class_name, icon_ext, description, help in loadToolsSettings.Tools:
    output.append(
        """
#######################################################################################################################
class """
        + class_name
        + ''':
    def GetResources(self):
        return {
            "Pixmap": os.path.join(iconPath, "'''
        + class_name
        + """."""
        + icon_ext
        + '''"),
            "MenuText": QT_TRANSLATE_NOOP(
                "'''
        + class_name
        + '''MenuText",
                "'''
        + description
        + '''",
            ),
            "ToolTip": QT_TRANSLATE_NOOP(
                "'''
        + class_name
        + '''ToolTip",
                "'''
        + help
        + '''",
            ),
            "Accel": "",
        }

    def Activated(self):
        import os
        import sys

        import fakemodule

        modulePath = sys.path

        module = "'''
        + class_name
        + """"

        path = os.path.dirname(fakemodule.__file__)
        path = os.path.join(path, "Tools")"""
    )

    if group_name:
        output.append('''        path = os.path.join(path, "''' + group_name + """")""")

    output.append(
        '''
        sys.path.append(path)

        if module in sys.modules:
            del sys.modules[module]

        __import__(module, globals(), locals(), [], 0)

        sys.path = modulePath

        return

    def IsActive(self):
        # not needed now, maybe in the future
        return True


FreeCADGui.addCommand("'''
        + class_name
        + """", """
        + class_name
        + """())
"""
    )


# ######################################################################################################################
# Overwrite the file loadTools.py
# ######################################################################################################################

with open("loadTools.py", "w") as file:
    file.write("%s\n" % "\n".join(output).rstrip())
